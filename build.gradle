plugins {
    id 'java'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
    id 'io.papermc.hangar-publish-plugin' version '0.1.3'
}

group = 'dev.mja00'
version = '1.2'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    implementation "net.kyori:adventure-text-serializer-plain:4.19.0"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks {
    runServer {
        minecraftVersion('1.21.4')
    }
}

hangarPublish {
    publications.register('plugin') {
        version.set(project.version as String)
        id.set('VillagerLobotomy')
        channel.set('Snapshot')

        apiKey.set(System.getenv('HANGAR_API_KEY'))

        platforms {
            register(Platforms.PAPER) {
                jar.set(tasks.jar.flatMap { it.archiveFile })
                def versions = (property('paperVersion') as String).split(',').collect { it.trim() }
                platformVersions.set(versions)
            }
        }
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
